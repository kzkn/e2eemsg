= turbo_stream_from @room

%div
  = link_to 'back to top', root_url
- other_members = @room.memberships.without(current_membership)
%div
  - other_members.each do |member|
    %div
      %span= member.name
      - user = member.user
      - if current_user.block_by_self?(user)
        = button_to 'ブロック解除', user_block_path(user), method: :delete
      - else
        = button_to 'ブロック', user_block_path(user), method: :post

= turbo_frame_tag @room, src: room_messages_path(@room)

-# TODO: clear form after submit
%div text
-# TODO: この部分の js 実装
%div{ data: { controller: 'message-encryptor' } }
  = form_with model: TextMessage.new, url: '#' do |f|
    = f.text_area :body, required: true, autocomplete: 'off'
    = f.button '送信'
  = form_with model: TextMessageForm.new, url: room_text_messages_path(@room) do |f|
    - other_members.each_with_index do |member, index|
      - enc_msg = TextMessageForm::EncryptedMessage.new(key_pair_id: member.latest_key_pair.id)
      = f.fields_for :encrypted_messages, enc_msg, index: do |ff|
        %div{ data: { message_encryptor_target: 'cipher', public_key: ff.object.public_key } }
          = ff.hidden_field :membership_id, value: member.id
          = ff.hidden_field :key_pair_id, value: ff.object.key_pair_id
          = ff.hidden_field :cipher

%div image
= form_with model: ImageMessage.new, url: room_image_messages_path(@room) do |f|
  = f.file_field :image, required: true
  = f.button '送信'

%div video
= form_with model: VideoMessage.new, url: room_video_messages_path(@room) do |f|
  = f.file_field :video, required: true
  = f.button '送信'

%div stamp
- current_user.owned_stamp_sets.order(:id).each do |stamp_set|
  %div
    %div= stamp_set.name
    - stamp_set.stamps.order(:id).each do |stamp|
      = form_with model: StampMessage.new, url: room_stamp_messages_path(@room) do |f|
        = f.hidden_field :stamp_id, value: stamp.id
        = f.button do
          = image_tag stamp.image, style: 'width:75px;height:auto'
